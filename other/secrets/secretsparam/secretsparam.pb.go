// Code generated by protoc-gen-go. DO NOT EDIT.
// source: other/secrets/secretsparam/secretsparam.proto

/*
Package secretsparam is a generated protocol buffer package.

It is generated from these files:
	other/secrets/secretsparam/secretsparam.proto

It has these top-level messages:
	Vault_Params
	List_Vault
*/
package secretsparam

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Vault_Params struct {
	CDR_LINK    string   `protobuf:"bytes,1,opt,name=CDR_LINK,json=cDRLINK" json:"CDR_LINK,omitempty"`
	TEXT        string   `protobuf:"bytes,2,opt,name=TEXT,json=tEXT" json:"TEXT,omitempty"`
	IsImage     bool     `protobuf:"varint,3,opt,name=IsImage,json=isImage" json:"IsImage,omitempty"`
	SizeOf      string   `protobuf:"bytes,4,opt,name=SizeOf,json=sizeOf" json:"SizeOf,omitempty"`
	Access      string   `protobuf:"bytes,5,opt,name=Access,json=access" json:"Access,omitempty"`
	Objects     string   `protobuf:"bytes,6,opt,name=Objects,json=objects" json:"Objects,omitempty"`
	ImagePath   string   `protobuf:"bytes,7,opt,name=ImagePath,json=imagePath" json:"ImagePath,omitempty"`
	ContentView []string `protobuf:"bytes,8,rep,name=ContentView,json=contentView" json:"ContentView,omitempty"`
}

func (m *Vault_Params) Reset()                    { *m = Vault_Params{} }
func (m *Vault_Params) String() string            { return proto.CompactTextString(m) }
func (*Vault_Params) ProtoMessage()               {}
func (*Vault_Params) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Vault_Params) GetCDR_LINK() string {
	if m != nil {
		return m.CDR_LINK
	}
	return ""
}

func (m *Vault_Params) GetTEXT() string {
	if m != nil {
		return m.TEXT
	}
	return ""
}

func (m *Vault_Params) GetIsImage() bool {
	if m != nil {
		return m.IsImage
	}
	return false
}

func (m *Vault_Params) GetSizeOf() string {
	if m != nil {
		return m.SizeOf
	}
	return ""
}

func (m *Vault_Params) GetAccess() string {
	if m != nil {
		return m.Access
	}
	return ""
}

func (m *Vault_Params) GetObjects() string {
	if m != nil {
		return m.Objects
	}
	return ""
}

func (m *Vault_Params) GetImagePath() string {
	if m != nil {
		return m.ImagePath
	}
	return ""
}

func (m *Vault_Params) GetContentView() []string {
	if m != nil {
		return m.ContentView
	}
	return nil
}

type List_Vault struct {
	List []*Vault_Params `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	ID   string          `protobuf:"bytes,2,opt,name=ID,json=iD" json:"ID,omitempty"`
}

func (m *List_Vault) Reset()                    { *m = List_Vault{} }
func (m *List_Vault) String() string            { return proto.CompactTextString(m) }
func (*List_Vault) ProtoMessage()               {}
func (*List_Vault) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *List_Vault) GetList() []*Vault_Params {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *List_Vault) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func init() {
	proto.RegisterType((*Vault_Params)(nil), "secretsparam.Vault_Params")
	proto.RegisterType((*List_Vault)(nil), "secretsparam.List_Vault")
}

func init() { proto.RegisterFile("other/secrets/secretsparam/secretsparam.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x49, 0x13, 0xf3, 0x67, 0x52, 0x3c, 0xec, 0x41, 0x56, 0xf1, 0x10, 0x7a, 0xca, 0xc5,
	0x08, 0xfa, 0x04, 0xd2, 0xf4, 0x10, 0x0c, 0xb6, 0xac, 0xa1, 0xf4, 0x16, 0xb6, 0xcb, 0x6a, 0x57,
	0xda, 0x6e, 0xc9, 0x8c, 0x08, 0xbe, 0xad, 0x6f, 0x22, 0xd9, 0x58, 0x6c, 0x4f, 0xcb, 0xef, 0xb7,
	0xc3, 0x0c, 0xdf, 0x07, 0x77, 0x96, 0x36, 0xba, 0xbb, 0x47, 0xad, 0x3a, 0x4d, 0x78, 0x7c, 0x0f,
	0xb2, 0x93, 0xbb, 0x33, 0x28, 0x0e, 0x9d, 0x25, 0xcb, 0xc6, 0xa7, 0x6e, 0xf2, 0xe3, 0xc1, 0x78,
	0x29, 0x3f, 0xb7, 0xd4, 0x2e, 0x7a, 0x46, 0x76, 0x0d, 0xf1, 0xb4, 0x14, 0x6d, 0x5d, 0xbd, 0x3c,
	0x73, 0x2f, 0xf3, 0xf2, 0x44, 0x44, 0xaa, 0x14, 0x3d, 0x32, 0x06, 0x41, 0x33, 0x5b, 0x35, 0x7c,
	0xe4, 0x74, 0x40, 0xb3, 0x55, 0xc3, 0x38, 0x44, 0x15, 0x56, 0x3b, 0xf9, 0xae, 0xb9, 0x9f, 0x79,
	0x79, 0x2c, 0x22, 0x33, 0x20, 0xbb, 0x82, 0xf0, 0xd5, 0x7c, 0xeb, 0xf9, 0x1b, 0x0f, 0xdc, 0x7c,
	0x88, 0x8e, 0x7a, 0xff, 0xa4, 0x94, 0x46, 0xe4, 0x17, 0x83, 0x97, 0x8e, 0xfa, 0x4d, 0xf3, 0xf5,
	0x87, 0x56, 0x84, 0x3c, 0x1c, 0xee, 0xda, 0x01, 0xd9, 0x2d, 0x24, 0x6e, 0xe5, 0x42, 0xd2, 0x86,
	0x47, 0xee, 0x2f, 0x31, 0x47, 0xc1, 0x32, 0x48, 0xa7, 0x76, 0x4f, 0x7a, 0x4f, 0x4b, 0xa3, 0xbf,
	0x78, 0x9c, 0xf9, 0x79, 0x22, 0x52, 0xf5, 0xaf, 0x26, 0x35, 0x40, 0x6d, 0x90, 0x5a, 0x97, 0x93,
	0x15, 0x10, 0x6c, 0x0d, 0x12, 0xf7, 0x32, 0x3f, 0x4f, 0x1f, 0x6e, 0x8a, 0xb3, 0x8a, 0x4e, 0xab,
	0x10, 0x6e, 0x8e, 0x5d, 0xc2, 0xa8, 0x2a, 0xff, 0x32, 0x8f, 0x4c, 0xb9, 0x0e, 0x5d, 0x8d, 0x8f,
	0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2a, 0xdd, 0xec, 0x21, 0x77, 0x01, 0x00, 0x00,
}
