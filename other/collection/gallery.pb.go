// proto version3

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: other/collection/gallery.proto

package collection

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// create protocol buffer structure
type Pictures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PicId       string            `protobuf:"bytes,1,opt,name=Pic_id,json=picId,proto3" json:"Pic_id,omitempty"`
	PicSrc      string            `protobuf:"bytes,2,opt,name=Pic_src,json=picSrc,proto3" json:"Pic_src,omitempty"`
	PicDate     string            `protobuf:"bytes,3,opt,name=Pic_date,json=picDate,proto3" json:"Pic_date,omitempty"`
	PicTime     string            `protobuf:"bytes,4,opt,name=Pic_time,json=picTime,proto3" json:"Pic_time,omitempty"`
	UserAgentId string            `protobuf:"bytes,5,opt,name=User_agent_id,json=userAgentId,proto3" json:"User_agent_id,omitempty"`
	PicTags     string            `protobuf:"bytes,6,opt,name=Pic_tags,json=picTags,proto3" json:"Pic_tags,omitempty"`
	CDR         map[string]string `protobuf:"bytes,7,rep,name=CDR,json=cDR,proto3" json:"CDR,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // key : multi-format cid , value : link of storage
}

func (x *Pictures) Reset() {
	*x = Pictures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_other_collection_gallery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pictures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pictures) ProtoMessage() {}

func (x *Pictures) ProtoReflect() protoreflect.Message {
	mi := &file_other_collection_gallery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pictures.ProtoReflect.Descriptor instead.
func (*Pictures) Descriptor() ([]byte, []int) {
	return file_other_collection_gallery_proto_rawDescGZIP(), []int{0}
}

func (x *Pictures) GetPicId() string {
	if x != nil {
		return x.PicId
	}
	return ""
}

func (x *Pictures) GetPicSrc() string {
	if x != nil {
		return x.PicSrc
	}
	return ""
}

func (x *Pictures) GetPicDate() string {
	if x != nil {
		return x.PicDate
	}
	return ""
}

func (x *Pictures) GetPicTime() string {
	if x != nil {
		return x.PicTime
	}
	return ""
}

func (x *Pictures) GetUserAgentId() string {
	if x != nil {
		return x.UserAgentId
	}
	return ""
}

func (x *Pictures) GetPicTags() string {
	if x != nil {
		return x.PicTags
	}
	return ""
}

func (x *Pictures) GetCDR() map[string]string {
	if x != nil {
		return x.CDR
	}
	return nil
}

// create array of Pictures for multiple pictures
type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gallery []*Pictures `protobuf:"bytes,1,rep,name=gallery,proto3" json:"gallery,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_other_collection_gallery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_other_collection_gallery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_other_collection_gallery_proto_rawDescGZIP(), []int{1}
}

func (x *Collection) GetGallery() []*Pictures {
	if x != nil {
		return x.Gallery
	}
	return nil
}

// compressed message require hash of avatar
type Compressed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAgentId string `protobuf:"bytes,1,opt,name=User_agent_id,json=userAgentId,proto3" json:"User_agent_id,omitempty"`
	PicId       string `protobuf:"bytes,2,opt,name=Pic_id,json=picId,proto3" json:"Pic_id,omitempty"`
}

func (x *Compressed) Reset() {
	*x = Compressed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_other_collection_gallery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Compressed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Compressed) ProtoMessage() {}

func (x *Compressed) ProtoReflect() protoreflect.Message {
	mi := &file_other_collection_gallery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Compressed.ProtoReflect.Descriptor instead.
func (*Compressed) Descriptor() ([]byte, []int) {
	return file_other_collection_gallery_proto_rawDescGZIP(), []int{2}
}

func (x *Compressed) GetUserAgentId() string {
	if x != nil {
		return x.UserAgentId
	}
	return ""
}

func (x *Compressed) GetPicId() string {
	if x != nil {
		return x.PicId
	}
	return ""
}

// metadata file contain few pictures properties
type Metadata_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PicSrc      string `protobuf:"bytes,1,opt,name=Pic_src,json=picSrc,proto3" json:"Pic_src,omitempty"`
	CDR         string `protobuf:"bytes,2,opt,name=CDR,json=cDR,proto3" json:"CDR,omitempty"`
	UserAgentId string `protobuf:"bytes,3,opt,name=User_agent_id,json=userAgentId,proto3" json:"User_agent_id,omitempty"`
}

func (x *Metadata_File) Reset() {
	*x = Metadata_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_other_collection_gallery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata_File) ProtoMessage() {}

func (x *Metadata_File) ProtoReflect() protoreflect.Message {
	mi := &file_other_collection_gallery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata_File.ProtoReflect.Descriptor instead.
func (*Metadata_File) Descriptor() ([]byte, []int) {
	return file_other_collection_gallery_proto_rawDescGZIP(), []int{3}
}

func (x *Metadata_File) GetPicSrc() string {
	if x != nil {
		return x.PicSrc
	}
	return ""
}

func (x *Metadata_File) GetCDR() string {
	if x != nil {
		return x.CDR
	}
	return ""
}

func (x *Metadata_File) GetUserAgentId() string {
	if x != nil {
		return x.UserAgentId
	}
	return ""
}

// content route required hash of avatar object and who will share it
type ContentRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserAgentId  string `protobuf:"bytes,1,opt,name=User_agent_id,json=userAgentId,proto3" json:"User_agent_id,omitempty"`
	IsP2PAddress bool   `protobuf:"varint,2,opt,name=IsP2PAddress,json=isP2PAddress,proto3" json:"IsP2PAddress,omitempty"`
}

func (x *ContentRoute) Reset() {
	*x = ContentRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_other_collection_gallery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentRoute) ProtoMessage() {}

func (x *ContentRoute) ProtoReflect() protoreflect.Message {
	mi := &file_other_collection_gallery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentRoute.ProtoReflect.Descriptor instead.
func (*ContentRoute) Descriptor() ([]byte, []int) {
	return file_other_collection_gallery_proto_rawDescGZIP(), []int{4}
}

func (x *ContentRoute) GetUserAgentId() string {
	if x != nil {
		return x.UserAgentId
	}
	return ""
}

func (x *ContentRoute) GetIsP2PAddress() bool {
	if x != nil {
		return x.IsP2PAddress
	}
	return false
}

var File_other_collection_gallery_proto protoreflect.FileDescriptor

var file_other_collection_gallery_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x02, 0x0a,
	0x08, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x50, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x69, 0x63, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x69, 0x63, 0x53, 0x72, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x50, 0x69, 0x63,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x50, 0x69, 0x63, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x50, 0x69, 0x63, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2f,
	0x0a, 0x03, 0x43, 0x44, 0x52, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x2e, 0x43, 0x44, 0x52, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x63, 0x44, 0x52, 0x1a,
	0x36, 0x0a, 0x08, 0x43, 0x44, 0x52, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x07, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x07, 0x67, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x79, 0x22, 0x47, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x50, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x69, 0x63, 0x49, 0x64, 0x22, 0x5e,
	0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x50, 0x69, 0x63, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x69, 0x63, 0x53, 0x72, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x44, 0x52, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x44, 0x52, 0x12, 0x22, 0x0a, 0x0d, 0x55, 0x73,
	0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x56,
	0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x50, 0x32, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x32, 0x50, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32, 0xd2, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x1a, 0x16, 0x2e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x1a,
	0x18, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x1a, 0x19, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x30, 0x5a, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x69, 0x32, 0x32, 0x31,
	0x30, 0x2f, 0x77, 0x69, 0x7a, 0x64, 0x77, 0x61, 0x72, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x73, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_other_collection_gallery_proto_rawDescOnce sync.Once
	file_other_collection_gallery_proto_rawDescData = file_other_collection_gallery_proto_rawDesc
)

func file_other_collection_gallery_proto_rawDescGZIP() []byte {
	file_other_collection_gallery_proto_rawDescOnce.Do(func() {
		file_other_collection_gallery_proto_rawDescData = protoimpl.X.CompressGZIP(file_other_collection_gallery_proto_rawDescData)
	})
	return file_other_collection_gallery_proto_rawDescData
}

var file_other_collection_gallery_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_other_collection_gallery_proto_goTypes = []interface{}{
	(*Pictures)(nil),      // 0: collection.Pictures
	(*Collection)(nil),    // 1: collection.Collection
	(*Compressed)(nil),    // 2: collection.Compressed
	(*Metadata_File)(nil), // 3: collection.Metadata_File
	(*ContentRoute)(nil),  // 4: collection.ContentRoute
	nil,                   // 5: collection.Pictures.CDREntry
}
var file_other_collection_gallery_proto_depIdxs = []int32{
	5, // 0: collection.Pictures.CDR:type_name -> collection.Pictures.CDREntry
	0, // 1: collection.Collection.gallery:type_name -> collection.Pictures
	0, // 2: collection.StreamService.NewPictures:input_type -> collection.Pictures
	2, // 3: collection.StreamService.SearchPictures:input_type -> collection.Compressed
	2, // 4: collection.StreamService.GetMetadata:input_type -> collection.Compressed
	1, // 5: collection.StreamService.NewPictures:output_type -> collection.Collection
	4, // 6: collection.StreamService.SearchPictures:output_type -> collection.ContentRoute
	3, // 7: collection.StreamService.GetMetadata:output_type -> collection.Metadata_File
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_other_collection_gallery_proto_init() }
func file_other_collection_gallery_proto_init() {
	if File_other_collection_gallery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_other_collection_gallery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pictures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_other_collection_gallery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_other_collection_gallery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Compressed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_other_collection_gallery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_other_collection_gallery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_other_collection_gallery_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_other_collection_gallery_proto_goTypes,
		DependencyIndexes: file_other_collection_gallery_proto_depIdxs,
		MessageInfos:      file_other_collection_gallery_proto_msgTypes,
	}.Build()
	File_other_collection_gallery_proto = out.File
	file_other_collection_gallery_proto_rawDesc = nil
	file_other_collection_gallery_proto_goTypes = nil
	file_other_collection_gallery_proto_depIdxs = nil
}
