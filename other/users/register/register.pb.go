// Code generated by protoc-gen-go. DO NOT EDIT.
// source: other/users/register/register.proto

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	other/users/register/register.proto

It has these top-level messages:
	New_User
	Updated_User
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Traits int32

const (
	Traits_MAN   Traits = 0
	Traits_WOMEN Traits = 1
)

var Traits_name = map[int32]string{
	0: "MAN",
	1: "WOMEN",
}
var Traits_value = map[string]int32{
	"MAN":   0,
	"WOMEN": 1,
}

func (x Traits) String() string {
	return proto.EnumName(Traits_name, int32(x))
}
func (Traits) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Respecful int32

const (
	Respecful_Mr  Respecful = 0
	Respecful_Ms  Respecful = 1
	Respecful_Mrs Respecful = 2
)

var Respecful_name = map[int32]string{
	0: "Mr",
	1: "Ms",
	2: "Mrs",
}
var Respecful_value = map[string]int32{
	"Mr":  0,
	"Ms":  1,
	"Mrs": 2,
}

func (x Respecful) String() string {
	return proto.EnumName(Respecful_name, int32(x))
}
func (Respecful) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Relationship int32

const (
	Relationship_Single  Relationship = 0
	Relationship_Maried  Relationship = 1
	Relationship_Widow   Relationship = 2
	Relationship_Divoced Relationship = 3
)

var Relationship_name = map[int32]string{
	0: "Single",
	1: "Maried",
	2: "Widow",
	3: "Divoced",
}
var Relationship_value = map[string]int32{
	"Single":  0,
	"Maried":  1,
	"Widow":   2,
	"Divoced": 3,
}

func (x Relationship) String() string {
	return proto.EnumName(Relationship_name, int32(x))
}
func (Relationship) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type RelationLevel int32

const (
	RelationLevel_Family       RelationLevel = 0
	RelationLevel_Pal          RelationLevel = 1
	RelationLevel_Peers        RelationLevel = 2
	RelationLevel_Relatives    RelationLevel = 3
	RelationLevel_Acquaintance RelationLevel = 4
	RelationLevel_Inspiring    RelationLevel = 5
	RelationLevel_None         RelationLevel = 6
)

var RelationLevel_name = map[int32]string{
	0: "Family",
	1: "Pal",
	2: "Peers",
	3: "Relatives",
	4: "Acquaintance",
	5: "Inspiring",
	6: "None",
}
var RelationLevel_value = map[string]int32{
	"Family":       0,
	"Pal":          1,
	"Peers":        2,
	"Relatives":    3,
	"Acquaintance": 4,
	"Inspiring":    5,
	"None":         6,
}

func (x RelationLevel) String() string {
	return proto.EnumName(RelationLevel_name, int32(x))
}
func (RelationLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type New_User struct {
	Name            string `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
	Email           string `protobuf:"bytes,2,opt,name=Email,json=email" json:"Email,omitempty"`
	Password        string `protobuf:"bytes,3,opt,name=Password,json=password" json:"Password,omitempty"`
	Lastname        string `protobuf:"bytes,4,opt,name=Lastname,json=lastname" json:"Lastname,omitempty"`
	Address         string `protobuf:"bytes,5,opt,name=Address,json=address" json:"Address,omitempty"`
	Phone           string `protobuf:"bytes,6,opt,name=Phone,json=phone" json:"Phone,omitempty"`
	Zip             string `protobuf:"bytes,7,opt,name=Zip,json=zip" json:"Zip,omitempty"`
	City            string `protobuf:"bytes,8,opt,name=City,json=city" json:"City,omitempty"`
	State           string `protobuf:"bytes,9,opt,name=State,json=state" json:"State,omitempty"`
	Gender          Traits `protobuf:"varint,10,opt,name=Gender,json=gender,enum=user.Traits" json:"Gender,omitempty"`
	ID              string `protobuf:"bytes,11,opt,name=ID,json=iD" json:"ID,omitempty"`
	Friends         int64  `protobuf:"varint,12,opt,name=Friends,json=friends" json:"Friends,omitempty"`
	Inspire         int64  `protobuf:"varint,13,opt,name=Inspire,json=inspire" json:"Inspire,omitempty"`
	Lead            int64  `protobuf:"varint,14,opt,name=Lead,json=lead" json:"Lead,omitempty"`
	SocialEvolution int64  `protobuf:"varint,15,opt,name=SocialEvolution,json=socialEvolution" json:"SocialEvolution,omitempty"`
	Link            string `protobuf:"bytes,16,opt,name=Link,json=link" json:"Link,omitempty"`
}

func (m *New_User) Reset()                    { *m = New_User{} }
func (m *New_User) String() string            { return proto.CompactTextString(m) }
func (*New_User) ProtoMessage()               {}
func (*New_User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *New_User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *New_User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *New_User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *New_User) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *New_User) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *New_User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *New_User) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *New_User) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *New_User) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *New_User) GetGender() Traits {
	if m != nil {
		return m.Gender
	}
	return Traits_MAN
}

func (m *New_User) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *New_User) GetFriends() int64 {
	if m != nil {
		return m.Friends
	}
	return 0
}

func (m *New_User) GetInspire() int64 {
	if m != nil {
		return m.Inspire
	}
	return 0
}

func (m *New_User) GetLead() int64 {
	if m != nil {
		return m.Lead
	}
	return 0
}

func (m *New_User) GetSocialEvolution() int64 {
	if m != nil {
		return m.SocialEvolution
	}
	return 0
}

func (m *New_User) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

type Updated_User struct {
	ID              string       `protobuf:"bytes,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Name            string       `protobuf:"bytes,2,opt,name=Name,json=name" json:"Name,omitempty"`
	Email           string       `protobuf:"bytes,3,opt,name=Email,json=email" json:"Email,omitempty"`
	Phone           string       `protobuf:"bytes,4,opt,name=Phone,json=phone" json:"Phone,omitempty"`
	Lastname        string       `protobuf:"bytes,5,opt,name=Lastname,json=lastname" json:"Lastname,omitempty"`
	Address         string       `protobuf:"bytes,6,opt,name=Address,json=address" json:"Address,omitempty"`
	State           string       `protobuf:"bytes,7,opt,name=State,json=state" json:"State,omitempty"`
	City            string       `protobuf:"bytes,8,opt,name=City,json=city" json:"City,omitempty"`
	Zip             string       `protobuf:"bytes,9,opt,name=Zip,json=zip" json:"Zip,omitempty"`
	Gender          Traits       `protobuf:"varint,10,opt,name=Gender,json=gender,enum=user.Traits" json:"Gender,omitempty"`
	Status          Relationship `protobuf:"varint,11,opt,name=Status,json=status,enum=user.Relationship" json:"Status,omitempty"`
	Suffix          Respecful    `protobuf:"varint,12,opt,name=Suffix,json=suffix,enum=user.Respecful" json:"Suffix,omitempty"`
	University      string       `protobuf:"bytes,13,opt,name=University,json=university" json:"University,omitempty"`
	Circulum        string       `protobuf:"bytes,14,opt,name=Circulum,json=circulum" json:"Circulum,omitempty"`
	Company         string       `protobuf:"bytes,15,opt,name=Company,json=company" json:"Company,omitempty"`
	Date            string       `protobuf:"bytes,16,opt,name=Date,json=date" json:"Date,omitempty"`
	Published       int64        `protobuf:"varint,17,opt,name=Published,json=published" json:"Published,omitempty"`
	Achievements    string       `protobuf:"bytes,18,opt,name=Achievements,json=achievements" json:"Achievements,omitempty"`
	Citation        string       `protobuf:"bytes,19,opt,name=Citation,json=citation" json:"Citation,omitempty"`
	Friends         int64        `protobuf:"varint,20,opt,name=Friends,json=friends" json:"Friends,omitempty"`
	Inspire         int64        `protobuf:"varint,21,opt,name=Inspire,json=inspire" json:"Inspire,omitempty"`
	Lead            int64        `protobuf:"varint,22,opt,name=Lead,json=lead" json:"Lead,omitempty"`
	SocialEvolution int64        `protobuf:"varint,24,opt,name=SocialEvolution,json=socialEvolution" json:"SocialEvolution,omitempty"`
	Password        string       `protobuf:"bytes,25,opt,name=Password,json=password" json:"Password,omitempty"`
	Link            string       `protobuf:"bytes,26,opt,name=Link,json=link" json:"Link,omitempty"`
}

func (m *Updated_User) Reset()                    { *m = Updated_User{} }
func (m *Updated_User) String() string            { return proto.CompactTextString(m) }
func (*Updated_User) ProtoMessage()               {}
func (*Updated_User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Updated_User) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Updated_User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Updated_User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Updated_User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Updated_User) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *Updated_User) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Updated_User) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Updated_User) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Updated_User) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Updated_User) GetGender() Traits {
	if m != nil {
		return m.Gender
	}
	return Traits_MAN
}

func (m *Updated_User) GetStatus() Relationship {
	if m != nil {
		return m.Status
	}
	return Relationship_Single
}

func (m *Updated_User) GetSuffix() Respecful {
	if m != nil {
		return m.Suffix
	}
	return Respecful_Mr
}

func (m *Updated_User) GetUniversity() string {
	if m != nil {
		return m.University
	}
	return ""
}

func (m *Updated_User) GetCirculum() string {
	if m != nil {
		return m.Circulum
	}
	return ""
}

func (m *Updated_User) GetCompany() string {
	if m != nil {
		return m.Company
	}
	return ""
}

func (m *Updated_User) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Updated_User) GetPublished() int64 {
	if m != nil {
		return m.Published
	}
	return 0
}

func (m *Updated_User) GetAchievements() string {
	if m != nil {
		return m.Achievements
	}
	return ""
}

func (m *Updated_User) GetCitation() string {
	if m != nil {
		return m.Citation
	}
	return ""
}

func (m *Updated_User) GetFriends() int64 {
	if m != nil {
		return m.Friends
	}
	return 0
}

func (m *Updated_User) GetInspire() int64 {
	if m != nil {
		return m.Inspire
	}
	return 0
}

func (m *Updated_User) GetLead() int64 {
	if m != nil {
		return m.Lead
	}
	return 0
}

func (m *Updated_User) GetSocialEvolution() int64 {
	if m != nil {
		return m.SocialEvolution
	}
	return 0
}

func (m *Updated_User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Updated_User) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func init() {
	proto.RegisterType((*New_User)(nil), "user.New_User")
	proto.RegisterType((*Updated_User)(nil), "user.Updated_User")
	proto.RegisterEnum("user.Traits", Traits_name, Traits_value)
	proto.RegisterEnum("user.Respecful", Respecful_name, Respecful_value)
	proto.RegisterEnum("user.Relationship", Relationship_name, Relationship_value)
	proto.RegisterEnum("user.RelationLevel", RelationLevel_name, RelationLevel_value)
}

func init() { proto.RegisterFile("other/users/register/register.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 713 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0x6f, 0x6f, 0xda, 0x3a,
	0x14, 0xc6, 0x09, 0x09, 0x09, 0x71, 0xf9, 0xe3, 0xeb, 0xdb, 0x7b, 0xe5, 0x5b, 0x55, 0x57, 0x55,
	0x57, 0x69, 0x88, 0x17, 0xad, 0xd4, 0xbd, 0x9f, 0x54, 0x95, 0x76, 0xaa, 0x54, 0x18, 0x0a, 0xab,
	0x26, 0xed, 0xcd, 0xe4, 0x26, 0x07, 0xb0, 0x1a, 0x9c, 0xcc, 0x4e, 0xe8, 0xd8, 0xe7, 0xd8, 0x57,
	0xd9, 0xf7, 0x9b, 0x6c, 0x03, 0xcd, 0x36, 0x3a, 0xed, 0x15, 0x39, 0xe7, 0xf8, 0xe1, 0x3c, 0x3e,
	0xbf, 0x93, 0xa0, 0x17, 0x59, 0x31, 0x07, 0x79, 0x56, 0x2a, 0x90, 0xea, 0x4c, 0xc2, 0x8c, 0xab,
	0x02, 0xe4, 0xf6, 0xe1, 0x34, 0x97, 0x59, 0x91, 0x11, 0x4f, 0x97, 0x8f, 0xbf, 0xba, 0xa8, 0x39,
	0x82, 0xc7, 0x8f, 0x77, 0x0a, 0x24, 0x21, 0xc8, 0x1b, 0xb1, 0x05, 0x50, 0xe7, 0xc8, 0xe9, 0x85,
	0x91, 0x27, 0xd8, 0x02, 0xc8, 0x3e, 0x6a, 0x5c, 0x2d, 0x18, 0x4f, 0x69, 0xdd, 0x24, 0x1b, 0xa0,
	0x03, 0x72, 0x80, 0x9a, 0x63, 0xa6, 0xd4, 0x63, 0x26, 0x13, 0xea, 0x9a, 0x42, 0x33, 0x5f, 0xc7,
	0xba, 0x76, 0xcb, 0x54, 0xa1, 0xd5, 0xd4, 0xb3, 0xb5, 0x74, 0x1d, 0x13, 0x8a, 0x82, 0x8b, 0x24,
	0x91, 0xa0, 0x14, 0x6d, 0x98, 0x52, 0xc0, 0x6c, 0xa8, 0xfb, 0x8c, 0xe7, 0x99, 0x00, 0xea, 0xdb,
	0x3e, 0xb9, 0x0e, 0x08, 0x46, 0xee, 0x07, 0x9e, 0xd3, 0xc0, 0xe4, 0xdc, 0x2f, 0x3c, 0xd7, 0x1e,
	0x2f, 0x79, 0xb1, 0xa2, 0x4d, 0xeb, 0x31, 0xe6, 0xc5, 0x4a, 0x6b, 0x27, 0x05, 0x2b, 0x80, 0x86,
	0x56, 0xab, 0x74, 0x40, 0x4e, 0x90, 0xff, 0x06, 0x44, 0x02, 0x92, 0xa2, 0x23, 0xa7, 0xd7, 0x39,
	0x6f, 0x9d, 0xea, 0x1b, 0x9f, 0xbe, 0x93, 0x8c, 0x17, 0x2a, 0xf2, 0x67, 0xa6, 0x46, 0x3a, 0xa8,
	0x7e, 0x33, 0xa0, 0x7b, 0x46, 0x58, 0xe7, 0x03, 0xed, 0xf0, 0x5a, 0x72, 0x10, 0x89, 0xa2, 0xad,
	0x23, 0xa7, 0xe7, 0x46, 0xc1, 0xd4, 0x86, 0xba, 0x72, 0x23, 0x54, 0xce, 0x25, 0xd0, 0xb6, 0xad,
	0x70, 0x1b, 0x6a, 0x4f, 0xb7, 0xc0, 0x12, 0xda, 0x31, 0x69, 0x2f, 0x05, 0x96, 0x90, 0x1e, 0xea,
	0x4e, 0xb2, 0x98, 0xb3, 0xf4, 0x6a, 0x99, 0xa5, 0x65, 0xc1, 0x33, 0x41, 0xbb, 0xa6, 0xdc, 0x55,
	0x3f, 0xa6, 0x8d, 0x9a, 0x8b, 0x07, 0x8a, 0xed, 0x8d, 0x52, 0x2e, 0x1e, 0x8e, 0xbf, 0x35, 0x50,
	0xeb, 0x2e, 0x4f, 0x58, 0x01, 0x89, 0x45, 0x63, 0x6d, 0x3a, 0x5b, 0x9b, 0x1b, 0x54, 0xf5, 0x5d,
	0xa8, 0xdc, 0x2a, 0xaa, 0xed, 0x60, 0xbd, 0xea, 0x60, 0xab, 0x90, 0x1a, 0xcf, 0x43, 0xf2, 0x7f,
	0x81, 0x64, 0x07, 0x1d, 0x54, 0x07, 0xbd, 0x0b, 0xc9, 0x1a, 0x5c, 0xf8, 0x04, 0xee, 0xcf, 0x70,
	0xf4, 0x91, 0xaf, 0x3b, 0x94, 0xca, 0x20, 0xe9, 0x9c, 0x13, 0x7b, 0x2a, 0x82, 0x94, 0xe9, 0x61,
	0xa9, 0x39, 0xcf, 0x23, 0x5f, 0x99, 0x13, 0xe4, 0x25, 0xf2, 0x27, 0xe5, 0x74, 0xca, 0x3f, 0x1b,
	0x52, 0x9d, 0xf3, 0xee, 0xe6, 0xac, 0xca, 0x21, 0x9e, 0x96, 0x69, 0xe4, 0x2b, 0x53, 0x26, 0xff,
	0x23, 0x74, 0x27, 0xf8, 0x12, 0xa4, 0xd2, 0x36, 0xdb, 0xc6, 0x13, 0x2a, 0xb7, 0x19, 0x3d, 0x8c,
	0x4b, 0x2e, 0xe3, 0x32, 0x2d, 0x17, 0x86, 0x61, 0x18, 0x35, 0xe3, 0x75, 0xac, 0x87, 0x71, 0x99,
	0x2d, 0x72, 0x26, 0x56, 0x86, 0x5f, 0x18, 0x05, 0xb1, 0x0d, 0xf5, 0xb5, 0x07, 0x7a, 0x16, 0x6b,
	0x6e, 0x1a, 0x16, 0x39, 0x44, 0xe1, 0xb8, 0xbc, 0x4f, 0xb9, 0x9a, 0x43, 0x42, 0xff, 0x32, 0xbc,
	0xc3, 0x7c, 0x93, 0x20, 0xc7, 0xa8, 0x75, 0x11, 0xcf, 0x39, 0x2c, 0x61, 0x01, 0xa2, 0x50, 0x94,
	0x18, 0x65, 0x8b, 0x55, 0x72, 0xd6, 0x4b, 0x61, 0x2e, 0x4b, 0xff, 0xde, 0x78, 0xb1, 0x71, 0x75,
	0x37, 0xf7, 0x9f, 0xdd, 0xcd, 0x7f, 0x76, 0xef, 0xe6, 0xbf, 0xbf, 0xdf, 0x4d, 0xba, 0x7b, 0x37,
	0xab, 0xef, 0xf9, 0x7f, 0x3f, 0xbd, 0xe7, 0x9b, 0xbd, 0x3d, 0x78, 0xda, 0xdb, 0xfe, 0x21, 0xf2,
	0x2d, 0x50, 0x12, 0x20, 0x77, 0x78, 0x31, 0xc2, 0x35, 0x12, 0xa2, 0xc6, 0xfb, 0xb7, 0xc3, 0xab,
	0x11, 0x76, 0xfa, 0x27, 0x28, 0xdc, 0xc2, 0x21, 0x3e, 0xaa, 0x0f, 0x25, 0xae, 0x99, 0x5f, 0x85,
	0x1d, 0x23, 0x90, 0x0a, 0xd7, 0xfb, 0xaf, 0x51, 0xab, 0x8a, 0x9b, 0x20, 0xe4, 0x4f, 0xb8, 0x98,
	0xa5, 0x80, 0x6b, 0xfa, 0x79, 0xc8, 0x24, 0x87, 0x04, 0x3b, 0xe6, 0x8f, 0x79, 0x92, 0x3d, 0xe2,
	0x3a, 0xd9, 0x43, 0xc1, 0x80, 0x2f, 0xb3, 0x18, 0x12, 0xec, 0xf6, 0x39, 0x6a, 0x6f, 0xf4, 0xb7,
	0xb0, 0x84, 0x54, 0x8b, 0xae, 0xd9, 0x82, 0xa7, 0x2b, 0x5c, 0xd3, 0x5d, 0xc6, 0x2c, 0xb5, 0xea,
	0x31, 0x80, 0x6e, 0x48, 0xda, 0xda, 0x96, 0x16, 0x2c, 0x41, 0x61, 0x97, 0x60, 0x4d, 0xe9, 0x53,
	0xc9, 0xb8, 0x28, 0x98, 0x88, 0x01, 0x7b, 0xfa, 0x80, 0x9d, 0x2e, 0x17, 0x33, 0xdc, 0x20, 0x4d,
	0xe4, 0x8d, 0x32, 0x01, 0xd8, 0xbf, 0xf7, 0xcd, 0xa7, 0xf4, 0xd5, 0xf7, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xf0, 0x1c, 0x69, 0x42, 0x71, 0x05, 0x00, 0x00,
}
