// Code generated by protoc-gen-go. DO NOT EDIT.
// source: other/cloudmedia/dlink/dlink.proto

/*
Package dlink is a generated protocol buffer package.

It is generated from these files:
	other/cloudmedia/dlink/dlink.proto

It has these top-level messages:
	DLINK_MESSAGE
*/
package dlink

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Errors int32

const (
	Errors_ERR_EMPTY_URL      Errors = 0
	Errors_ERR_INVALID_URL    Errors = 1
	Errors_ERR_CLOSE_CON      Errors = 2
	Errors_ERR_MALICIOUS_URL  Errors = 3
	Errors_ERR_PATH_MOVED     Errors = 4
	Errors_ERR_UNKNOWN_       Errors = 5
	Errors_ERR_KEYS_NOT_EXIST Errors = 6
	Errors_ERR_EMPTY_VALUE    Errors = 7
	Errors_NONE               Errors = 8
)

var Errors_name = map[int32]string{
	0: "ERR_EMPTY_URL",
	1: "ERR_INVALID_URL",
	2: "ERR_CLOSE_CON",
	3: "ERR_MALICIOUS_URL",
	4: "ERR_PATH_MOVED",
	5: "ERR_UNKNOWN_",
	6: "ERR_KEYS_NOT_EXIST",
	7: "ERR_EMPTY_VALUE",
	8: "NONE",
}
var Errors_value = map[string]int32{
	"ERR_EMPTY_URL":      0,
	"ERR_INVALID_URL":    1,
	"ERR_CLOSE_CON":      2,
	"ERR_MALICIOUS_URL":  3,
	"ERR_PATH_MOVED":     4,
	"ERR_UNKNOWN_":       5,
	"ERR_KEYS_NOT_EXIST": 6,
	"ERR_EMPTY_VALUE":    7,
	"NONE":               8,
}

func (x Errors) String() string {
	return proto.EnumName(Errors_name, int32(x))
}
func (Errors) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DLINK_MESSAGE struct {
	RESOURCE_D_LINK string `protobuf:"bytes,1,opt,name=RESOURCE_D_LINK,json=rESOURCEDLINK" json:"RESOURCE_D_LINK,omitempty"`
	USER_SESSION_ID string `protobuf:"bytes,2,opt,name=USER_SESSION_ID,json=uSERSESSIONID" json:"USER_SESSION_ID,omitempty"`
	PEPPER_MESSAGE  string `protobuf:"bytes,3,opt,name=PEPPER_MESSAGE,json=pEPPERMESSAGE" json:"PEPPER_MESSAGE,omitempty"`
	ErrorType       Errors `protobuf:"varint,4,opt,name=ErrorType,json=errorType,enum=dlink.Errors" json:"ErrorType,omitempty"`
}

func (m *DLINK_MESSAGE) Reset()                    { *m = DLINK_MESSAGE{} }
func (m *DLINK_MESSAGE) String() string            { return proto.CompactTextString(m) }
func (*DLINK_MESSAGE) ProtoMessage()               {}
func (*DLINK_MESSAGE) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DLINK_MESSAGE) GetRESOURCE_D_LINK() string {
	if m != nil {
		return m.RESOURCE_D_LINK
	}
	return ""
}

func (m *DLINK_MESSAGE) GetUSER_SESSION_ID() string {
	if m != nil {
		return m.USER_SESSION_ID
	}
	return ""
}

func (m *DLINK_MESSAGE) GetPEPPER_MESSAGE() string {
	if m != nil {
		return m.PEPPER_MESSAGE
	}
	return ""
}

func (m *DLINK_MESSAGE) GetErrorType() Errors {
	if m != nil {
		return m.ErrorType
	}
	return Errors_ERR_EMPTY_URL
}

func init() {
	proto.RegisterType((*DLINK_MESSAGE)(nil), "dlink.DLINK_MESSAGE")
	proto.RegisterEnum("dlink.Errors", Errors_name, Errors_value)
}

func init() { proto.RegisterFile("other/cloudmedia/dlink/dlink.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0xd0, 0xdd, 0x4a, 0xc3, 0x30,
	0x14, 0xc0, 0x71, 0xbb, 0x2f, 0xb7, 0x83, 0xdd, 0xb2, 0x88, 0xd2, 0xcb, 0x31, 0x50, 0x86, 0xc2,
	0x06, 0xfa, 0x04, 0xa5, 0x3d, 0x68, 0x58, 0x9b, 0x94, 0xa4, 0x9d, 0xee, 0x2a, 0xa8, 0x2b, 0x38,
	0x9c, 0xb6, 0xd4, 0xed, 0xc2, 0xe7, 0xf2, 0xc2, 0xd7, 0x93, 0xa4, 0xeb, 0x4d, 0xa1, 0xbf, 0xf3,
	0x87, 0x73, 0x08, 0x4c, 0x8b, 0xfd, 0x7b, 0x5e, 0x2d, 0xde, 0x76, 0xc5, 0x61, 0xf3, 0x99, 0x6f,
	0xb6, 0x2f, 0x8b, 0xcd, 0x6e, 0xfb, 0xf5, 0x51, 0x7f, 0xe7, 0x65, 0x55, 0xec, 0x0b, 0xda, 0xb5,
	0x3f, 0xd3, 0x5f, 0x07, 0xdc, 0x30, 0x62, 0x7c, 0xa9, 0x63, 0x54, 0xca, 0x7f, 0x40, 0x7a, 0x0d,
	0x23, 0x89, 0x4a, 0x64, 0x32, 0x40, 0x1d, 0x6a, 0x33, 0xf2, 0x9c, 0x89, 0x33, 0x1b, 0x48, 0xb7,
	0x3a, 0xb2, 0xed, 0x4d, 0x97, 0x29, 0x94, 0x5a, 0xa1, 0x52, 0x4c, 0x70, 0xcd, 0x42, 0xaf, 0x55,
	0x77, 0x07, 0x85, 0xf2, 0xa8, 0x2c, 0xa4, 0x57, 0x30, 0x4c, 0x30, 0x49, 0x50, 0x36, 0x1b, 0xbc,
	0x76, 0x9d, 0x95, 0x56, 0x9b, 0xb5, 0xb7, 0x30, 0xc0, 0xaa, 0x2a, 0xaa, 0xf4, 0xa7, 0xcc, 0xbd,
	0xce, 0xc4, 0x99, 0x0d, 0xef, 0xdc, 0x79, 0x7d, 0xb0, 0xf5, 0x6f, 0x39, 0xc8, 0x9b, 0xf9, 0xcd,
	0x9f, 0x03, 0xbd, 0x5a, 0xe9, 0x18, 0x5c, 0x94, 0x52, 0x63, 0x9c, 0xa4, 0x6b, 0x9d, 0xc9, 0x88,
	0x9c, 0xd0, 0x73, 0x18, 0x19, 0x62, 0x7c, 0xe5, 0x47, 0x2c, 0xb4, 0xe8, 0x34, 0x5d, 0x10, 0x09,
	0x85, 0x3a, 0x10, 0x9c, 0xb4, 0xe8, 0x05, 0x8c, 0x0d, 0xc5, 0x7e, 0xc4, 0x02, 0x26, 0x32, 0x65,
	0xcb, 0x36, 0xa5, 0x30, 0x34, 0x9c, 0xf8, 0xe9, 0xa3, 0x8e, 0xc5, 0x0a, 0x43, 0xd2, 0xa1, 0x04,
	0xce, 0x8c, 0x65, 0x7c, 0xc9, 0xc5, 0x13, 0xd7, 0xa4, 0x4b, 0x2f, 0x81, 0x1a, 0x59, 0xe2, 0x5a,
	0x69, 0x2e, 0x52, 0x8d, 0xcf, 0x4c, 0xa5, 0xa4, 0xd7, 0x2c, 0xaf, 0xef, 0x59, 0xf9, 0x51, 0x86,
	0xe4, 0x94, 0xf6, 0xa1, 0xc3, 0x05, 0x47, 0xd2, 0x7f, 0xed, 0xd9, 0xd7, 0xbf, 0xff, 0x0f, 0x00,
	0x00, 0xff, 0xff, 0x3a, 0x8c, 0x03, 0xc6, 0xa3, 0x01, 0x00, 0x00,
}
